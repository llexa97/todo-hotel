#!/usr/bin/env python3
"""
Script de suppression de toutes les t√¢ches - Todo H√¥tel
‚ö†Ô∏è  ATTENTION: Ce script supprime TOUTES les t√¢ches de la base de donn√©es

Usage:
    python clear_all_tasks.py [--confirm]

Options:
    --confirm    Confirme la suppression (requis pour √©viter les suppressions accidentelles)
    --dry-run    Simule la suppression sans l'effectuer (pour compter les t√¢ches)
"""

import sys
import argparse
from app import create_app
from app.models import Task
from app import db


def clear_all_tasks(dry_run=False):
    """
    Supprime toutes les t√¢ches de la base de donn√©es.
    
    Args:
        dry_run (bool): Si True, simule sans supprimer
        
    Returns:
        int: Nombre de t√¢ches supprim√©es
    """
    app = create_app()
    
    with app.app_context():
        # Compter les t√¢ches existantes
        total_tasks = Task.query.count()
        
        if total_tasks == 0:
            print("üì≠ Aucune t√¢che trouv√©e dans la base de donn√©es")
            return 0
        
        if dry_run:
            print(f"üîç MODE SIMULATION: {total_tasks} t√¢ches seraient supprim√©es")
            
            # Afficher quelques exemples
            sample_tasks = Task.query.limit(5).all()
            print("\nüìã Exemples de t√¢ches qui seraient supprim√©es:")
            for task in sample_tasks:
                status = "‚úÖ" if task.is_done else "‚è≥"
                print(f"  {status} {task.title} (due: {task.due_date})")
            
            if total_tasks > 5:
                print(f"  ... et {total_tasks - 5} autres t√¢ches")
            
            return total_tasks
        
        # Suppression r√©elle
        print(f"üóëÔ∏è  Suppression de {total_tasks} t√¢ches...")
        
        try:
            # Supprimer toutes les t√¢ches
            deleted_count = Task.query.delete()
            db.session.commit()
            
            print(f"‚úÖ {deleted_count} t√¢ches supprim√©es avec succ√®s")
            return deleted_count
            
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå Erreur lors de la suppression: {str(e)}")
            raise e


def main():
    """Point d'entr√©e principal."""
    parser = argparse.ArgumentParser(
        description="Supprime toutes les t√¢ches de la base de donn√©es Todo H√¥tel",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="‚ö†Ô∏è  ATTENTION: Cette op√©ration est irr√©versible!\n"
               "Assurez-vous d'avoir une sauvegarde de votre base de donn√©es."
    )
    parser.add_argument(
        "--confirm", 
        action="store_true",
        help="Confirme la suppression (REQUIS pour √©viter les suppressions accidentelles)"
    )
    parser.add_argument(
        "--dry-run", 
        action="store_true",
        help="Simule la suppression sans l'effectuer (pour compter les t√¢ches)"
    )
    
    args = parser.parse_args()
    
    print("üóëÔ∏è  Script de suppression de toutes les t√¢ches - Todo H√¥tel")
    print("=" * 60)
    
    if args.dry_run:
        print("üîç Mode simulation activ√©")
        try:
            count = clear_all_tasks(dry_run=True)
            if count > 0:
                print(f"\nüí° Pour supprimer r√©ellement ces {count} t√¢ches, utilisez:")
                print("   python clear_all_tasks.py --confirm")
        except Exception as e:
            print(f"‚ùå Erreur: {e}")
            sys.exit(1)
            
    elif args.confirm:
        print("‚ö†Ô∏è  SUPPRESSION CONFIRM√âE - Toutes les t√¢ches vont √™tre supprim√©es")
        response = input("√ätes-vous ABSOLUMENT s√ªr ? Tapez 'SUPPRIMER' pour continuer: ")
        
        if response != 'SUPPRIMER':
            print("‚ùå Suppression annul√©e")
            sys.exit(0)
        
        try:
            count = clear_all_tasks(dry_run=False)
            print(f"üéâ Op√©ration termin√©e: {count} t√¢ches supprim√©es")
        except Exception as e:
            print(f"‚ùå Erreur: {e}")
            sys.exit(1)
            
    else:
        print("‚ùå Erreur: Vous devez utiliser --confirm ou --dry-run")
        print("\nüí° Utilisez d'abord --dry-run pour voir ce qui serait supprim√©:")
        print("   python clear_all_tasks.py --dry-run")
        print("\n‚ö†Ô∏è  Puis --confirm pour supprimer r√©ellement:")
        print("   python clear_all_tasks.py --confirm")
        sys.exit(1)



if __name__ == "__main__":
    main()